drop table if exists users cascade;
create table if not exists users (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL CHECK (name <> ''),
  email VARCHAR(512) NOT NULL CHECK (email <> ''),
  CONSTRAINT pk_user PRIMARY KEY (id),
  CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

drop table if exists requests cascade;
create table if not exists requests (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    description VARCHAR(512) NOT NULL,
    requestor_id bigint references users(id),
    constraint pk_request primary key (id)
);

drop table if exists items cascade;
create table if not exists items (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  description VARCHAR(512) NOT NULL,
  is_available BOOLEAN NOT NULL,
  owner_id bigint references users (id) NOT NULL,
  request_id bigint references requests(id),
  last_booking_id bigint references bookings(id),
  next_booking_id bigint references bookings(id),
  CONSTRAINT pk_item PRIMARY KEY (id)
);

drop table if exists comments cascade;
create table if not exists comments (
    id bigint generated by default as identity not null,
    text varchar(512) not null,
    item_id bigint references items (id),
    author_id bigint references users (id),
    created timestamp without time zone default NULL,
    constraint pk_comment primary key (id)
);

drop type if exists status cascade;
create type status as enum ('WAITING', 'APPROVED', 'REJECTED', 'CANCELED');

drop table if exists bookings cascade;
create table if not exists bookings (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  start_date timestamp without time zone default NULL,
  end_date timestamp without time zone default NULL,
  item_id bigint references items (id),
  booker_id bigint references users (id),
  status status,
  constraint pk_id primary key (id)
);

